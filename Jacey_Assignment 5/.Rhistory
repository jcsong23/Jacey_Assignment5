t.test(subject_accuracy_wide$phonological, subject_accuracy_wide$semantic,
var.equal = TRUE, paired = TRUE)
t.test(subject_accuracy_wide$phonological, subject_accuracy_wide$semantic,
paired = TRUE)
# I chose to use subject_accuracy_wide
# paired t-test because same subjects, within-subjects
#
x1_bar = mean(subject_accuracy_wide$phonological)
x2_bar = subject_accuracy_wide %>% pull(semantic) %>% mean()
s1 = sd(subject_accuracy_wide$phonological)
s2 = subject_accuracy_wide %>% pull(semantic) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(semantic) %>% length()
t_numerator = x1_bar - x2_bar
inside_root1 = s1*s1/n1
inside_root2 = s2*s2/n1
t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
t.test(subject_accuracy_wide$phonological, subject_accuracy_wide$semantic,
paired = TRUE)
# I chose to use subject_accuracy_wide
# This was a paired t-test because same subjects, within-subjects
# I assumed unequal variance and two tailed test
# From this t-test, we can confidently reject the null because the p-value is smaller than 0.05, even when you consider it as a two-tailed test.
# This means that phonological and semantic primes resulted significantly different accuracy results.
x1_bar = mean(subject_accuracy_wide$phonological)
x2_bar = subject_accuracy_wide %>% pull(semantic) %>% mean()
s1 = sd(subject_accuracy_wide$phonological)
s2 = subject_accuracy_wide %>% pull(semantic) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(semantic) %>% length()
t_numerator = x1_bar - x2_bar
inside_root1 = s1*s1/n1
inside_root2 = s2*s2/n1
t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
# two tailed
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
t.test(subject_accuracy_wide$phonological, subject_accuracy_wide$semantic, var.equal = TRUE,
paired = TRUE)
# I chose to use subject_accuracy_wide
# This was a paired t-test because same subjects, within-subjects
# I assumed unequal variance and two tailed test
# From this t-test, we can confidently reject the null because the p-value is smaller than 0.05, even when you consider it as a two-tailed test.
# This means that phonological and semantic primes resulted significantly different accuracy results.
t.test(subject_accuracy_wide$phonological, subject_accuracy_wide$semantic,
paired = TRUE)
# I chose to use subject_accuracy_wide
# This was a paired t-test because same subjects, within-subjects
# I assumed unequal variance and two tailed test
# From this t-test, we can confidently reject the null because the p-value is smaller than 0.05, even when you consider it as a two-tailed test.
# This means that phonological and semantic primes resulted significantly different accuracy results.
x1_bar = mean(subject_accuracy_wide$semantic)
x2_bar = subject_accuracy_wide %>% pull(phonological) %>% mean()
s1 = sd(subject_accuracy_wide$semantic)
s2 = subject_accuracy_wide %>% pull(phonological) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(phonological) %>% length()
t_numerator = x1_bar - x2_bar
inside_root1 = s1*s1/n1
inside_root2 = s2*s2/n1
t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
# two tailed
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
x1_bar = mean(subject_wide$Heavy_Normal)
x1_bar = mean(subject_accuracy_wide$phonological)
x2_bar = subject_accuracy_wide %>% pull(semantic) %>% mean()
s1 = sd(subject_accuracy_wide$phonological)
s2 = subject_accuracy_wide %>% pull(semantic) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(semantic) %>% length()
t_numerator = x1_bar - x2_bar
Sdiff = s1 - s2
sqrtN = sqrt(n1)
t_denominator = Sdiff/sqrtN
t = t_numerator/t_denominator
# two tailed
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
x1_bar = mean(subject_accuracy_wide$phonological)
x2_bar = subject_accuracy_wide %>% pull(semantic) %>% mean()
s1 = sd(subject_accuracy_wide$phonological)
s2 = subject_accuracy_wide %>% pull(semantic) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(semantic) %>% length()
t_numerator = x1_bar - x2_bar
inside_root1 = s1*s1/n1
inside_root2 = s2*s2/n1
t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
# two tailed
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
x1_bar = mean(subject_accuracy_wide$phonological)
x2_bar = subject_accuracy_wide %>% pull(semantic) %>% mean()
s1 = sd(subject_accuracy_wide$phonological)
s2 = subject_accuracy_wide %>% pull(semantic) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(semantic) %>% length()
t_numerator = x1_bar - x2_bar
Sdiff = s1 - s2
sqrtN = sqrt(n1)
t_denominator = (Sdiff/sqrtN)
t = t_numerator/t_denominator
# two tailed
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
t.test(subject_wide$Heavy_Normal, subject_wide$Heavy_Smashed,
var.equal = TRUE, paired = TRUE)
x1_bar = mean(subject_accuracy_wide$phonological)
x2_bar = subject_accuracy_wide %>% pull(semantic) %>% mean()
s1 = sd(subject_accuracy_wide$phonological)
s2 = subject_accuracy_wide %>% pull(semantic) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(semantic) %>% length()
t_numerator = x1_bar - x2_bar
Sdiff = s1 - s2
sqrtN = sqrt(n1)
t_denominator = (Sdiff/sqrtN)
t = t_numerator/t_denominator
# two tailed
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
View(subject_accuracy_wide)
x1_bar = mean(subject_accuracy_wide$phonological)
x2_bar = subject_accuracy_wide %>% pull(semantic) %>% mean()
s1 = sd(subject_accuracy_wide$phonological)
s2 = subject_accuracy_wide %>% pull(semantic) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(semantic) %>% length()
t_numerator = x1_bar - x2_bar
inside_root1 = s1*s1/n1
inside_root2 = s2*s2/n1
t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
# two tailed
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
x1_bar = mean(subject_accuracy_wide$phonological)
x2_bar = subject_accuracy_wide %>% pull(semantic) %>% mean()
s1 = sd(subject_accuracy_wide$phonological)
s2 = subject_accuracy_wide %>% pull(semantic) %>% sd()
n1 = nrow(subject_accuracy_wide)
n2 = subject_accuracy_wide %>% pull(semantic) %>% length()
t_numerator = x1_bar - x2_bar
inside_root1 = s1*s1/n1
inside_root2 = s2*s2/n1
t_denominator = sqrt(inside_root1 + inside_root2)
t = t_numerator/t_denominator
# two tailed
x = s1*s1/n1
y = s2*s2/n2
a = s1*s1*s1*s1/(n1*n1*(n1-1))
b = s2*s2*s2*s2/(n2*n2*(n2-1))
deg = (x+y)*(x+y)/(a+b)
p_value = 2*(1-pt(t,deg))
subject_acc_wide = subject_accuracy_wide %>%
mutate(diff = phonological - semantic)
subject_acc_wide = subject_acc_wide %>% ungroup()
outliers = subject_acc_wide %>% identify_outliers(diff)
outlier_subs = outliers %>% pull(subject)
subject_acc_wide_new = subject_acc_wide %>% filter(!subject %in% outlier_subs)
hist(subject_acc_wide$diff)
View(subject_acc_wide)
View(outliers)
subject_acc_wide = subject_accuracy_wide %>%
mutate(diff = phonological - semantic)
subject_acc_wide = subject_acc_wide %>% ungroup()
outliers = subject_acc_wide %>% identify_outliers(diff)
# Found 1 outlier
newdf = outliers %>% pull(subject)
subject_acc_wide_new = subject_acc_wide %>% filter(!subject %in% outlier_subs)
hist(subject_acc_wide$diff)
subject_acc_wide = subject_accuracy_wide %>%
mutate(diff = phonological - semantic)
subject_acc_wide = subject_acc_wide %>% ungroup()
outliers = subject_acc_wide %>% identify_outliers(diff)
# Found 1 outlier
newdf = outliers %>% pull(subject)
subject_acc_wide_new = subject_acc_wide %>% filter(!subject %in% outlier_subs)
hist(subject_acc_wide$diff)
subject_acc_wide = subject_accuracy_wide %>%
mutate(diff = phonological - semantic)
subject_acc_wide = subject_acc_wide %>% ungroup()
outliers = subject_acc_wide %>% identify_outliers(diff)
# Found 1 outlier
outlier_subs = outliers %>% pull(subject)
newdf = subject_acc_wide %>% filter(!subject %in% outlier_subs)
hist(subject_acc_wide$diff)
View(newdf)
subject_acc_wide = subject_accuracy_wide %>%
mutate(diff = phonological - semantic)
subject_acc_wide = subject_acc_wide %>% ungroup()
outliers = subject_acc_wide %>% identify_outliers(diff)
# Found 1 outlier
outlier_subs = outliers %>% pull(subject)
newdf = subject_acc_wide %>% filter(!subject %in% outlier_subs)
hist(subject_acc_wide$diff)
ggqqplot(subject_acc_wide, "diff")
subject_acc_wide %>% shapiro_test(diff)
subject_acc_wide = subject_accuracy_wide %>%
mutate(diff = phonological - semantic)
subject_acc_wide = subject_acc_wide %>% ungroup()
outliers = subject_acc_wide %>% identify_outliers(diff)
# Found 1 outlier
outlier_subs = outliers %>% pull(subject)
newdf = subject_acc_wide %>% filter(!subject %in% outlier_subs)
hist(subject_acc_wide$diff)
View(subject_acc_wide)
View(assignment5)
View(subject_accuracy)
View(subject_accuracy_wide)
View(subject_accuracy_long)
View(subject_accuracy_wide)
View(assignment5)
View(subject_accuracy)
View(subject_accuracy_wide)
View(subject_rt)
mean_rt = assignment5 %>%
group_by(prime_condition) %>%
summarise(mean_rt = mean(response_RT))
View(mean_rt)
mean_rt = assignment5 %>%
group_by(prime_condition) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x=mean_rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("RT") +
ggtitle("Histogram of RT")
mean_rt = assignment5 %>%
group_by(prime_condition) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x=prime_condition)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("RT") +
ggtitle("Histogram of RT")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x=prime_condition)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("RT") +
ggtitle("Histogram of RT")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x=mean_rt)) +
geom_histogram(binwidth = 1000,
fill = "purple",
color = "black",
position = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("RT") +
ggtitle("Histogram of RT")
mean_rt = assignment5 %>%
group_by(prime_condition) %>%
summarise(mean_rt = mean(response_RT))
prime_acc %>%
ggplot(aes(x = prime_condition, y = mean_rt)) +
geom_bar(fill = "pink", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
prime_acc %>%
ggplot(aes(x = prime_condition, y = mean_rt)) +
geom_bar(fill = "pink", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = mean_rt)) +
geom_bar(fill = "pink", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = mean_rt)) +
geom_bar(fill = "gold", color = "blue") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = response_rt)) +
geom_bar(fill = "gold", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = response_RT)) +
geom_bar(fill = "gold", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = response_RT)) +
geom_bar(fill = "gold", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = response_RT)) +
geom_bar(fill = "gold", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = response_RT)) +
geom_bar(fill = "pink", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean Accuracy") +
ggtitle ("Mean Accuracy Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition, response_RT) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = response_RT)) +
geom_bar(fill = "pink", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean RT") +
ggtitle ("Mean RT Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = response_RT)) +
geom_bar(fill = "pink", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean RT") +
ggtitle ("Mean RT Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = mean_rt)) +
geom_bar(fill = "pink", color = "blue", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean RT") +
ggtitle ("Mean RT Across Prime Condition")
mean_rt = assignment5 %>%
group_by(prime_condition) %>%
summarise(mean_rt = mean(response_RT))
mean_rt %>%
ggplot(aes(x = prime_condition, y = mean_rt)) +
geom_bar(fill = "pink", color = "black", stat = "identity") +
theme_few() +
xlab("Prime Condition") +
ylab("Mean RT") +
ggtitle ("Mean RT Across Prime Condition")
View(subject_rt)
View(mean_rt)
View(assignment5)
# fastest condition is both, slowest is semantic
subject_rt_wide = subject_rt %>%
pivot_wider(names_from = c(prime_condition), values_from = mean_rt)
View(subject_rt_wide)
# fastest condition is both, slowest is semantic
subject_rt_wide = subject_rt %>%
pivot_wider(names_from = c(prime_condition), values_from = mean_rt)
subject_rt_wide = subject_rt_wide %>%
group_by(subject, semantic, both)
View(subject_rt_wide)
# fastest condition is both, slowest is semantic
subject_rt_wide = subject_rt %>%
pivot_wider(names_from = c(prime_condition), values_from = mean_rt)
subject_rt_wide = subject_rt_wide %>%
select(subject, semantic, both)
View(subject_rt_wide)
# fastest condition is both, slowest is semantic
subject_rt_wide = subject_rt %>%
pivot_wider(names_from = c(prime_condition), values_from = mean_rt)
subject_rt_wide = subject_rt_wide %>%
select(subject, semantic, both)
subject_rt_wide = subject_rt_wide %>%
mutate(diff = semantic - both)
subject_rt_wide = subject_rt_wide %>% ungroup()
outliers_rt = subject_rt_wide %>% identify_outliers(diff)
outlier_subs_rt = outliers %>% pull(subject)
subject_rt_wide_new = subject_rt_wide %>% filter(!subject %in% outlier_subs_rt)
hist(subject_acc_wide$diff)
# fastest condition is both, slowest is semantic
subject_rt_wide = subject_rt %>%
pivot_wider(names_from = c(prime_condition), values_from = mean_rt)
subject_rt_wide = subject_rt_wide %>%
select(subject, semantic, both)
subject_rt_wide = subject_rt_wide %>%
mutate(diff_rt = semantic - both)
subject_rt_wide = subject_rt_wide %>% ungroup()
outliers_rt = subject_rt_wide %>% identify_outliers(diff_rt)
outlier_subs_rt = outliers %>% pull(subject)
subject_rt_wide_new = subject_rt_wide %>% filter(!subject %in% outlier_subs_rt)
hist(subject_acc_wide$diff_rt)
# fastest condition is both, slowest is semantic
subject_rt_wide = subject_rt %>%
pivot_wider(names_from = c(prime_condition), values_from = mean_rt)
subject_rt_wide = subject_rt_wide %>%
select(subject, semantic, both)
subject_rt_wide = subject_rt_wide %>%
mutate(diff_rt = semantic - both)
subject_rt_wide = subject_rt_wide %>% ungroup()
outliers_rt = subject_rt_wide %>% identify_outliers(diff_rt)
outlier_subs_rt = outliers %>% pull(subject)
subject_rt_wide_new = subject_rt_wide %>% filter(!subject %in% outlier_subs_rt)
hist(subject_rt_wide$diff_rt)
ggqqplot(subject_rt_wide, "diff_rt")
subject_rt_wide %>% shapiro_test(diff_rt)
# fastest condition is both, slowest is semantic
subject_rt_wide = subject_rt %>%
pivot_wider(names_from = c(prime_condition), values_from = mean_rt)
subject_rt_wide = subject_rt_wide %>%
select(subject, semantic, both)
subject_rt_wide = subject_rt_wide %>%
mutate(diff_rt = semantic - both)
subject_rt_wide = subject_rt_wide %>% ungroup()
outliers_rt = subject_rt_wide %>% identify_outliers(diff_rt)
outlier_subs_rt = outliers %>% pull(subject)
subject_rt_wide_new = subject_rt_wide %>% filter(!subject %in% outlier_subs_rt)
hist(subject_rt_wide$diff_rt)
ggqqplot(subject_rt_wide, "diff_rt")
subject_rt_wide %>% shapiro_test(diff_rt)
t.test(subject_rt_wide$semantic, subject_rt_wide$both,
var.equal = TRUE, paired = TRUE)
ggqqplot(subject_acc_wide, "diff")
subject_acc_wide %>% shapiro_test(diff)
# The shapiro test shows us that the different distribution, prior to taking out outliers, is roughly normal. The points roughly fall on a straight line, and it passes through O
# The test of assumptions does not change my conclusion about the validity of the t-test. From our analysis so far, it seems like people retrieve words that relate phonologically from memory much more accurately than for semantically related words. Phonological words help in retrieval.
